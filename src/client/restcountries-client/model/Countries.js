/**
 * Restcountries
 * API for restcountries.eu
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currencies from './Currencies';
import Languages from './Languages';
import RegionalBlocs from './RegionalBlocs';
import Translations from './Translations';

/**
 * The Countries model module.
 * @module model/Countries
 * @version 1.0.0
 */
class Countries {
    /**
     * Constructs a new <code>Countries</code>.
     * Model for Countries
     * @alias module:model/Countries
     * @param alpha2Code {String} 
     */
    constructor(alpha2Code) { 
        
        Countries.initialize(this, alpha2Code);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, alpha2Code) { 
        obj['alpha2Code'] = alpha2Code;
    }

    /**
     * Constructs a <code>Countries</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Countries} obj Optional instance to populate.
     * @return {module:model/Countries} The populated <code>Countries</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Countries();

            if (data.hasOwnProperty('alpha2Code')) {
                obj['alpha2Code'] = ApiClient.convertToType(data['alpha2Code'], 'String');
            }
            if (data.hasOwnProperty('alpha3Code')) {
                obj['alpha3Code'] = ApiClient.convertToType(data['alpha3Code'], 'String');
            }
            if (data.hasOwnProperty('altSpellings')) {
                obj['altSpellings'] = ApiClient.convertToType(data['altSpellings'], ['String']);
            }
            if (data.hasOwnProperty('area')) {
                obj['area'] = ApiClient.convertToType(data['area'], 'Number');
            }
            if (data.hasOwnProperty('borders')) {
                obj['borders'] = ApiClient.convertToType(data['borders'], ['String']);
            }
            if (data.hasOwnProperty('callingCodes')) {
                obj['callingCodes'] = ApiClient.convertToType(data['callingCodes'], ['String']);
            }
            if (data.hasOwnProperty('capital')) {
                obj['capital'] = ApiClient.convertToType(data['capital'], 'String');
            }
            if (data.hasOwnProperty('cioc')) {
                obj['cioc'] = ApiClient.convertToType(data['cioc'], 'String');
            }
            if (data.hasOwnProperty('currencies')) {
                obj['currencies'] = ApiClient.convertToType(data['currencies'], [Currencies]);
            }
            if (data.hasOwnProperty('demonym')) {
                obj['demonym'] = ApiClient.convertToType(data['demonym'], 'String');
            }
            if (data.hasOwnProperty('flag')) {
                obj['flag'] = ApiClient.convertToType(data['flag'], 'String');
            }
            if (data.hasOwnProperty('gini')) {
                obj['gini'] = ApiClient.convertToType(data['gini'], 'Number');
            }
            if (data.hasOwnProperty('languages')) {
                obj['languages'] = ApiClient.convertToType(data['languages'], [Languages]);
            }
            if (data.hasOwnProperty('latlng')) {
                obj['latlng'] = ApiClient.convertToType(data['latlng'], ['Number']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nativeName')) {
                obj['nativeName'] = ApiClient.convertToType(data['nativeName'], 'String');
            }
            if (data.hasOwnProperty('numericCode')) {
                obj['numericCode'] = ApiClient.convertToType(data['numericCode'], 'String');
            }
            if (data.hasOwnProperty('population')) {
                obj['population'] = ApiClient.convertToType(data['population'], 'Number');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('regionalBlocs')) {
                obj['regionalBlocs'] = ApiClient.convertToType(data['regionalBlocs'], [RegionalBlocs]);
            }
            if (data.hasOwnProperty('subregion')) {
                obj['subregion'] = ApiClient.convertToType(data['subregion'], 'String');
            }
            if (data.hasOwnProperty('timezones')) {
                obj['timezones'] = ApiClient.convertToType(data['timezones'], ['String']);
            }
            if (data.hasOwnProperty('topLevelDomain')) {
                obj['topLevelDomain'] = ApiClient.convertToType(data['topLevelDomain'], ['String']);
            }
            if (data.hasOwnProperty('translations')) {
                obj['translations'] = Translations.constructFromObject(data['translations']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} alpha2Code
 */
Countries.prototype['alpha2Code'] = undefined;

/**
 * @member {String} alpha3Code
 */
Countries.prototype['alpha3Code'] = undefined;

/**
 * @member {Array.<String>} altSpellings
 */
Countries.prototype['altSpellings'] = undefined;

/**
 * @member {Number} area
 */
Countries.prototype['area'] = undefined;

/**
 * @member {Array.<String>} borders
 */
Countries.prototype['borders'] = undefined;

/**
 * @member {Array.<String>} callingCodes
 */
Countries.prototype['callingCodes'] = undefined;

/**
 * @member {String} capital
 */
Countries.prototype['capital'] = undefined;

/**
 * @member {String} cioc
 */
Countries.prototype['cioc'] = undefined;

/**
 * @member {Array.<module:model/Currencies>} currencies
 */
Countries.prototype['currencies'] = undefined;

/**
 * @member {String} demonym
 */
Countries.prototype['demonym'] = undefined;

/**
 * @member {String} flag
 */
Countries.prototype['flag'] = undefined;

/**
 * @member {Number} gini
 */
Countries.prototype['gini'] = undefined;

/**
 * @member {Array.<module:model/Languages>} languages
 */
Countries.prototype['languages'] = undefined;

/**
 * @member {Array.<Number>} latlng
 */
Countries.prototype['latlng'] = undefined;

/**
 * @member {String} name
 */
Countries.prototype['name'] = undefined;

/**
 * @member {String} nativeName
 */
Countries.prototype['nativeName'] = undefined;

/**
 * @member {String} numericCode
 */
Countries.prototype['numericCode'] = undefined;

/**
 * @member {Number} population
 */
Countries.prototype['population'] = undefined;

/**
 * @member {String} region
 */
Countries.prototype['region'] = undefined;

/**
 * @member {Array.<module:model/RegionalBlocs>} regionalBlocs
 */
Countries.prototype['regionalBlocs'] = undefined;

/**
 * @member {String} subregion
 */
Countries.prototype['subregion'] = undefined;

/**
 * @member {Array.<String>} timezones
 */
Countries.prototype['timezones'] = undefined;

/**
 * @member {Array.<String>} topLevelDomain
 */
Countries.prototype['topLevelDomain'] = undefined;

/**
 * @member {module:model/Translations} translations
 */
Countries.prototype['translations'] = undefined;






export default Countries;

